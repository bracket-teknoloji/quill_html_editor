# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml
analyzer:
  enable-experiment:
    - null-aware-elements
  exclude:
    - "**/*.g.dart"
  errors:
    invalid_annotation_target: false

format:
  exclude:
  - "**/*.g.dart"
  - "**/*.freezed.dart"
  - "lib/src/source_out_path.dart"

formatter:
  page_width: 120
  trailing_commas: preserve

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    prefer_expression_function_bodies: true
    avoid_relative_lib_imports: true
    directives_ordering: true
    join_return_with_assignment: true
    use_truncating_division: true
    library_private_types_in_public_api: false
    no_literal_bool_comparisons: true
    prefer_conditional_assignment: true
    prefer_const_constructors: true
    prefer_contains: true
    sort_child_properties_last: true
    prefer_double_quotes: true
    prefer_final_locals: true
    avoid_web_libraries_in_flutter: false
    # prefer_final_parameters: true
    prefer_final_in_for_each: true
    prefer_null_aware_method_calls: true
    sort_constructors_first: true
    # use_if_null_to_convert_nulls_to_bools: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_interpolation_to_compose_strings: true
    prefer_mixin: true
    prefer_single_quotes: false
    unnecessary_breaks: true
    unnecessary_late: true
    unnecessary_lambdas: true
    unnecessary_parenthesis: true
    unnecessary_to_list_in_spreads: true
    unnecessary_null_checks: true
    use_decorated_box: true
    use_named_constants: true
    prefer_const_declarations: true
    always_put_required_named_parameters_first: true
    # unawaited_futures: true
    # unnecessary_null_aware_operator_on_extension_on_nullable: true
    use_build_context_synchronously: false
    avoid_type_to_string: true
    avoid_init_to_null: true
    require_trailing_commas: true
    # avoid_annotating_with_dynamic: true
    avoid_returning_null_for_void: true
    type_annotate_public_apis: true
    use_enums: true
    unnecessary_statements: true
    avoid_void_async: true
    avoid_empty_else: true
    type_literal_in_constant_pattern: true
    sort_unnamed_constructors_first: true
    avoid_double_and_int_checks: true
    implicit_reopen: true
    unnecessary_underscores: true
    prefer_inlined_adds: true
    avoid_null_checks_in_equality_operators: true
    package_names: true
    avoid_redundant_argument_values: true
    cascade_invocations: true
    prefer_typing_uninitialized_variables: true
    slash_for_doc_comments: true
    use_rethrow_when_possible: true
    exhaustive_cases: true
    implicit_call_tearoffs: true
    invalid_case_patterns: true
    always_declare_return_types: true
    noop_primitive_operations: true
    avoid_types_on_closure_parameters: true
    # avoid_catches_without_on_clauses: true

    # public_member_api_docs: true
# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
